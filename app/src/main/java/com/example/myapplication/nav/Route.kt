package com.example.myapplication.nav

import androidx.compose.foundation.ExperimentalFoundationApi
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.PaddingValues
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.grid.GridCells
import androidx.compose.foundation.lazy.grid.GridItemSpan
import androidx.compose.foundation.lazy.grid.LazyVerticalGrid
import androidx.compose.foundation.lazy.grid.items

import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.CenterAlignedTopAppBar
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.material3.TopAppBarDefaults
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.unit.dp
import androidx.navigation.NavType
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import androidx.navigation.navArgument
import coil.compose.AsyncImage
import com.example.myapplication.Product
import com.example.myapplication.ProductItem
import com.example.myapplication.R
import androidx.compose.ui.Alignment
import androidx.compose.ui.graphics.Color
import com.example.myapplication.ui.theme.PinkDark
import com.example.myapplication.ui.theme.PinkLight
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer


object Routes {
    const val Home = "home"
    const val ProductDetails = "productDetails"
}

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun AppNavigation() {
    val navController = rememberNavController()

    NavHost(navController = navController, startDestination = Routes.Home) {

        composable(Routes.Home) {
            HomeScreen(onNavigateToDetails = { productId ->
                navController.navigate("${Routes.ProductDetails}/$productId")
            })
        }

        composable(
            "${Routes.ProductDetails}/{productId}",
            arguments = listOf(navArgument("productId") { type = NavType.StringType })
        ) { backStackEntry ->
            val productId = backStackEntry.arguments?.getString("productId") ?: ""
            DetailsScreen(productId = productId)
        }
    }
}

@OptIn(ExperimentalMaterial3Api::class, ExperimentalFoundationApi::class)
@Composable
fun HomeScreen(onNavigateToDetails: (String) -> Unit) {
    val products = listOf(
        Product(
            id = "1",
            name = "Fajr",
            price = 19.99,
            imageResId = R.drawable.image1,
            description = "Une tasse inspir√©e par la s√©r√©nit√© de l‚Äôaube, symbole d‚Äôun nouveau d√©part"
        ),
        Product(
            id = "2",
            name = "Noor",
            price = 22.50,
            imageResId = R.drawable.image2,
            description = "√âl√©gante et lumineuse, cette tasse dor√©e apporte chaleur √† chaque instant caf√©"
        ),
        Product(
            id = "3",
            name = "Layali",
            price = 25.00,
            imageResId = R.drawable.image3,
            description = "Un hommage aux nuits orientales, parfaite pour les moments calmes et profonds"
        ),
        Product(
            id = "4",
            name = "Sama",
            price = 21.75,
            imageResId = R.drawable.image4,
            description = "Un design c√©leste aux nuances bleues, pour s‚Äô√©vader √† chaque gorg√©e"
        ),
        Product(
            id = "5",
            name = "Rimal",
            price = 18.90,
            imageResId = R.drawable.image5,
            description = "Inspir√©e des dunes dor√©es, cette tasse incarne la beaut√© du d√©sert"
        ),
        Product(
            id = "6",
            name = "Andalous",
            price = 29.90,
            imageResId = R.drawable.image6,
            description = "Un style raffin√© aux motifs andalous, alliant histoire et √©l√©gance"
        ),
        Product(
            id = "7",
            name = "Haneen",
            price = 24.60,
            imageResId = R.drawable.image7,
            description = "D√©licate et nostalgique, elle √©voque la douceur des souvenirs"
        ),
        Product(
            id = "8",
            name = "R√ºya Classique",
            price = 27.00,
            imageResId = R.drawable.image8,
            description = "Le mod√®le embl√©matique de R√ºya, o√π l‚Äôart rencontre l‚Äôauthenticit√©"
        ),
        Product(
            id = "9",
            name = "Asrar",
            price = 23.40,
            imageResId = R.drawable.image9,
            description = "Myst√©rieuse et artistique, cette tasse s√©duit les amateurs de beaut√© singuli√®re"
        ),

    )

    Scaffold(
        containerColor = PinkLight,
        topBar = {
            CenterAlignedTopAppBar(
                title = {
                    Text(
                        "R√ºya ‚Äì ŸÅŸÜÿßÿ¨ŸäŸÜ ÿ≠ÿßŸÑŸÖÿ©",
                        style = MaterialTheme.typography.titleLarge,
                        color = PinkDark
                    )
                },
                colors = TopAppBarDefaults.centerAlignedTopAppBarColors(
                    containerColor = PinkLight
                )
            )
        }
    ) { innerPadding ->
        LazyVerticalGrid(
            columns = GridCells.Adaptive(160.dp),
            modifier = Modifier.padding(innerPadding),
            contentPadding = PaddingValues(12.dp),
            verticalArrangement = Arrangement.spacedBy(20.dp),
            horizontalArrangement = Arrangement.spacedBy(16.dp)
        ) {


            item(span = { GridItemSpan(maxLineSpan) }) {
                BannerInfo()
            }
            // ÿ®ÿßŸÜÿ±
            item(span = { GridItemSpan(maxLineSpan) }) {
                AsyncImage(
                    model = R.drawable.image, // banner doux en rose
                    contentDescription = "Banner R√ºya",
                    modifier = Modifier
                        .fillMaxWidth()
                        .height(180.dp)
                        .clip(RoundedCornerShape(20.dp))
                        .padding(bottom = 16.dp),
                    contentScale = ContentScale.Crop
                )
            }

            // ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™
            items(products) { product ->
                ProductItem(
                    product = product,
                    onClick = { onNavigateToDetails(product.id) }
                )
            }
            item(span = { GridItemSpan(maxLineSpan) }) {
                R√ºyaFooter()
            }
        }

    }
}


@Composable
fun R√ºyaFooter() {
    Column(
        modifier = Modifier
            .fillMaxWidth()
            .background(color = Color(0xFFF5F5F5))
            .padding(vertical = 32.dp, horizontal = 20.dp)
    ) {
        // Logo & Slogan
        Text(
            text = "R√ºya ‚Äì ŸÅŸÜÿßÿ¨ŸäŸÜ ÿ≠ÿßŸÑŸÖÿ©",
            style = MaterialTheme.typography.titleLarge,
            color = PinkDark
        )
        Text(
            text = "Chaque tasse est une nouvelle r√™verie.",
            style = MaterialTheme.typography.bodyMedium,
            color = MaterialTheme.colorScheme.onSurfaceVariant,
            modifier = Modifier.padding(top = 4.dp)
        )

        Spacer(modifier = Modifier.height(24.dp))

        // Newsletter
        Text(
            text = "üå∏ Ne manquez rien !",
            style = MaterialTheme.typography.titleMedium,
            color = PinkDark
        )
        Text(
            text = "Abonnez-vous √† notre newsletter pour d√©couvrir nos nouvelles collections.",
            style = MaterialTheme.typography.bodySmall,
            modifier = Modifier.padding(top = 4.dp)
        )
        OutlinedTextField(
            value = "",
            onValueChange = {},
            label = { Text("Votre e-mail") },
            modifier = Modifier
                .fillMaxWidth()
                .padding(top = 12.dp)
                .clip(RoundedCornerShape(8.dp))
        )

        Spacer(modifier = Modifier.height(32.dp))

        // Sections (Services / Entreprise / Contact)
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween
        ) {
            Column {
                Text(
                    text = "Services",
                    style = MaterialTheme.typography.titleSmall,
                    color = PinkDark
                )
                Spacer(modifier = Modifier.height(8.dp))
                Text("√Ä propos de nous")
                Text("Livraison")
                Text("Confidentialit√©")
                Text("Conditions")
            }

            Column {
                Text(
                    text = "Entreprise",
                    style = MaterialTheme.typography.titleSmall,
                    color = PinkDark
                )
                Spacer(modifier = Modifier.height(8.dp))
                Text("LARACHE")
                Text("Magasin R√ºya")
                Text("0612225554")
                Text("Contact@R√ºya.ma")
            }

            Column {
                Text(
                    text = "R√©seaux",
                    style = MaterialTheme.typography.titleSmall,
                    color = PinkDark
                )
                Spacer(modifier = Modifier.height(8.dp))
                Row(horizontalArrangement = Arrangement.spacedBy(12.dp)) {
                    SocialText("üå∏ Pinterest")
                }
                Row(horizontalArrangement = Arrangement.spacedBy(12.dp)) {
                    SocialText("üì∏ Instagram")
                }
            }
        }

        Spacer(modifier = Modifier.height(32.dp))

        // Copyright
        Text(
            text = "¬© 2025 R√ºya ‚Äì Tous droits r√©serv√©s.",
            style = MaterialTheme.typography.bodySmall,
            modifier = Modifier.align(Alignment.CenterHorizontally),
            color = MaterialTheme.colorScheme.onSurfaceVariant
        )
    }
}

@Composable
fun SocialText(text: String) {
    Text(
        text = text,
        style = MaterialTheme.typography.bodyMedium,
        color = MaterialTheme.colorScheme.primary
    )
}




@Composable
fun BannerInfo() {
    Column(
        modifier = Modifier
            .fillMaxWidth()
            .background(color = Color(0xFFFDEEF8)) // ŸÑŸàŸÜ Ÿàÿ±ÿØŸä ŸÅÿßÿ™ÿ≠ ŸÜÿßÿπŸÖ
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text(
            text = "D√©pensez 600Dhs pour la livraison gratuite",
            style = MaterialTheme.typography.titleMedium,
            color = PinkDark
        )
        Spacer(modifier = Modifier.height(8.dp))
        Row(
            horizontalArrangement = Arrangement.spacedBy(24.dp),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Text(text = "22 000 abonn√©s", style = MaterialTheme.typography.bodyMedium)
            Text(text = "120 abonn√©s", style = MaterialTheme.typography.bodyMedium)
        }
        Spacer(modifier = Modifier.height(12.dp))
        Text(
            text = "Buvez votre caf√© avec de jolies tasses",
            style = MaterialTheme.typography.titleSmall,
            color = PinkDark
        )
        Text(
            text = "D√©couvrez les mugs",
            style = MaterialTheme.typography.bodyMedium,
            color = PinkDark,
            modifier = Modifier.padding(top = 4.dp)
        )
    }
}

@Composable
fun DetailsScreen(productId: String) {
    Text("Details of product ID: $productId")
}


